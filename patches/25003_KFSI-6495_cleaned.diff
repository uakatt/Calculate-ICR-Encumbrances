Index: work/src/edu/arizona/kfs/gl/batch/IcrEncumbranceFeedStep.java
===================================================================
--- work/src/edu/arizona/kfs/gl/batch/IcrEncumbranceFeedStep.java	(revision 0)
+++ work/src/edu/arizona/kfs/gl/batch/IcrEncumbranceFeedStep.java	(revision 25003)
@@ -0,0 +1,55 @@
+/*
+ * Copyright 2012 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.gl.batch;
+
+import org.kuali.kfs.sys.batch.AbstractWrappedBatchStep;
+import org.kuali.kfs.sys.batch.service.WrappedBatchExecutorService.CustomBatchExecutor;
+
+import edu.arizona.kfs.gl.batch.service.IcrEncumbranceService;
+
+public class IcrEncumbranceFeedStep extends AbstractWrappedBatchStep {
+    private IcrEncumbranceService icrEncumbranceService;
+
+    /**
+     * Gets the icrEncumbranceService attribute.
+     * 
+     * @return Returns the icrEncumbranceService.
+     */
+    public IcrEncumbranceService getIcrEncumbranceService() {
+	return icrEncumbranceService;
+    }
+
+    /**
+     * Sets the icrEncumbranceService attribute value.
+     * 
+     * @param icrEncumbranceService
+     *            The icrEncumbranceService to set.
+     */
+    public void setIcrEncumbranceService(IcrEncumbranceService icrEncumbranceService) {
+	this.icrEncumbranceService = icrEncumbranceService;
+    }
+
+    @Override
+    protected CustomBatchExecutor getCustomBatchExecutor() {
+	return new CustomBatchExecutor() {
+	    public boolean execute() {
+		icrEncumbranceService.buildIcrEncumbranceFeed();
+		return true;
+	    }
+	};
+    }
+
+}
Index: work/src/edu/arizona/kfs/gl/batch/service/IcrEncumbranceService.java
===================================================================
--- work/src/edu/arizona/kfs/gl/batch/service/IcrEncumbranceService.java	(revision 0)
+++ work/src/edu/arizona/kfs/gl/batch/service/IcrEncumbranceService.java	(revision 25003)
@@ -0,0 +1,22 @@
+/*
+ * Copyright 2012 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.gl.batch.service;
+
+import java.io.File;
+
+public interface IcrEncumbranceService {
+    public File buildIcrEncumbranceFeed();
+}
Index: work/src/edu/arizona/kfs/gl/batch/service/impl/IcrEncumbranceServiceImpl.java
===================================================================
--- work/src/edu/arizona/kfs/gl/batch/service/impl/IcrEncumbranceServiceImpl.java	(revision 0)
+++ work/src/edu/arizona/kfs/gl/batch/service/impl/IcrEncumbranceServiceImpl.java	(revision 25003)
@@ -0,0 +1,95 @@
+/*
+ * Copyright 2012 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.gl.batch.service.impl;
+
+import java.io.BufferedWriter;
+import java.io.File;
+import java.io.FileWriter;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
+import org.apache.log4j.Logger;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.kfs.sys.service.UniversityDateService;
+
+import edu.arizona.kfs.gl.batch.service.IcrEncumbranceService;
+import edu.arizona.kfs.gl.dataaccess.IcrEncumbranceDao;
+
+public class IcrEncumbranceServiceImpl implements IcrEncumbranceService {
+    private static Logger LOG = Logger.getLogger(IcrEncumbranceServiceImpl.class);
+    private String directoryName;
+    private IcrEncumbranceDao icrEncumbranceDao;
+
+    /**
+     * Gets the icrEncumbranceDao attribute.
+     * 
+     * @return Returns the icrEncumbranceDao.
+     */
+    public IcrEncumbranceDao getIcrEncumbranceDao() {
+	return icrEncumbranceDao;
+    }
+
+    /**
+     * Sets the icrEncumbranceDao attribute value.
+     * 
+     * @param icrEncumbranceDao
+     *            The icrEncumbranceDao to set.
+     */
+    public void setIcrEncumbranceDao(IcrEncumbranceDao icrEncumbranceDao) {
+	this.icrEncumbranceDao = icrEncumbranceDao;
+    }
+
+    /**
+     * Gets the directoryName attribute.
+     * 
+     * @return Returns the directoryName.
+     */
+    public String getDirectoryName() {
+	return directoryName;
+    }
+
+    /**
+     * Sets the directoryName attribute value.
+     * 
+     * @param directoryName
+     *            The directoryName to set.
+     */
+    public void setDirectoryName(String directoryName) {
+	this.directoryName = directoryName;
+    }
+
+    @Override
+    public File buildIcrEncumbranceFeed() {
+	File fileLoc = null;
+	Integer currentFiscalYear = SpringContext.getBean(UniversityDateService.class).getCurrentFiscalYear();
+	try {
+	    // make directory structure if doesn't exist
+	    new File(getDirectoryName()).mkdirs();
+	    fileLoc = new File(getDirectoryName(), "icr_encumbrance_feed_" + new SimpleDateFormat("yyyy_MM_dd_HH_mm_ss").format(new Date()) + ".txt");
+	    LOG.info("ICR Encumbrance feed location is " + fileLoc.getPath());
+	    BufferedWriter fw = new BufferedWriter(new FileWriter(fileLoc));
+	    try {
+		icrEncumbranceDao.buildIcrEncumbranceFeed(currentFiscalYear, fw);
+	    } finally {
+		fw.flush();
+		fw.close();
+	    }
+	} catch (Exception ex) {
+	    throw new RuntimeException("Error, see the stack trace.", ex);
+	}
+	return fileLoc;
+    }
+}
Index: work/src/edu/arizona/kfs/gl/spring-gl.xml
===================================================================
--- work/src/edu/arizona/kfs/gl/spring-gl.xml	(revision 25002)
+++ work/src/edu/arizona/kfs/gl/spring-gl.xml	(revision 25003)
@@ -383,4 +383,16 @@
 			<ref bean="glCurrentAccountBalanceLookupableHelperService" />
 		</property>
 	</bean>
+	<!-- KFSI-6495 Calculate ICR Encumbrances in KFS- MOD -->
+	<bean id="icrEncumbranceDao" class="edu.arizona.kfs.gl.dataaccess.impl.IcrEncumbranceDaoJdbc" parent="platformAwareDaoJdbc" />
+	
+	<bean id="icrEncumbranceService" class="edu.arizona.kfs.gl.batch.service.impl.IcrEncumbranceServiceImpl">
+		<property name="directoryName" value="${staging.directory}/gl/enterpriseFeed" />
+		<property name="icrEncumbranceDao" ref="icrEncumbranceDao"></property>
+	</bean>
+	
+	<bean id="icrEncumbranceFeedStep" class="edu.arizona.kfs.gl.batch.IcrEncumbranceFeedStep" parent="wrappedStep">
+		<property name="icrEncumbranceService" ref="icrEncumbranceService" />
+	</bean>
+	
 </beans>
\ No newline at end of file
Index: work/src/edu/arizona/kfs/gl/dataaccess/impl/IcrEncumbranceDaoJdbc.java
===================================================================
--- work/src/edu/arizona/kfs/gl/dataaccess/impl/IcrEncumbranceDaoJdbc.java	(revision 0)
+++ work/src/edu/arizona/kfs/gl/dataaccess/impl/IcrEncumbranceDaoJdbc.java	(revision 25003)
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2012 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.gl.dataaccess.impl;
+
+import java.io.IOException;
+import java.io.Writer;
+import java.sql.ResultSet;
+import java.sql.SQLException;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+
+import org.apache.commons.lang.StringUtils;
+import org.apache.log4j.Logger;
+import org.kuali.rice.kns.dao.jdbc.PlatformAwareDaoBaseJdbc;
+import org.kuali.rice.kns.util.KualiDecimal;
+import org.springframework.dao.DataAccessException;
+import org.springframework.jdbc.core.ResultSetExtractor;
+
+import edu.arizona.kfs.gl.dataaccess.IcrEncumbranceDao;
+
+public class IcrEncumbranceDaoJdbc extends PlatformAwareDaoBaseJdbc implements IcrEncumbranceDao {
+    private static Logger LOG = Logger.getLogger(IcrEncumbranceDaoJdbc.class);
+
+    @Override
+    public void buildIcrEncumbranceFeed(Integer fiscalYear, final Writer fw) throws IOException {
+	String sql = "select t1.univ_fiscal_yr, t1.fin_coa_cd, t1.account_nbr, t1.sub_acct_nbr, t1.fin_object_cd, t1.fin_balance_typ_cd, "
+		+ "t1.fdoc_typ_cd, t1.fs_origin_cd, t1.fdoc_nbr, t1.trn_encum_desc, sum(nvl(t1.acln_encum_amt - t1.acln_encum_cls_amt, 0)) encumb_amt, "
+		+ "sum(nvl(t2.acln_encum_amt - t2.acln_encum_cls_amt, 0)) current_amt from gl_encumbrance_t t1 left join gl_encumbrance_t t2 "
+		+ "on t1.univ_fiscal_yr = t2.univ_fiscal_yr and t1.account_nbr = t2.account_nbr and t1.sub_acct_nbr = t2.sub_acct_nbr and "
+		+ "t1.fin_object_cd = t2.fin_object_cd and t1.fin_sub_obj_cd = t2.fin_sub_obj_cd and t1.fin_balance_typ_cd = t2.fin_balance_typ_cd "
+		+ "and t1.fdoc_typ_cd = t2.fdoc_typ_cd and t1.fdoc_nbr = t2.fdoc_nbr and t2.fs_origin_cd = 'IC' join ca_account_t t3 on "
+		+ "t1.fin_coa_cd = t3.fin_coa_cd and t1.account_nbr = t3.account_nbr left join ca_object_code_t t4 on t4.univ_fiscal_yr = t1.univ_fiscal_yr "
+		+ "and t4.fin_coa_cd = t1.fin_coa_cd and t4.fin_object_cd = t1.fin_object_cd "
+		+ "left join ca_icr_auto_entr_t t5 on t5.fin_series_id = t3.fin_series_id and t5.univ_fiscal_yr = t1.univ_fiscal_yr "
+		+ "where t1.fin_balance_typ_cd in ('IE','EX') and t1.fs_origin_cd <> 'IC' and t4.fin_obj_typ_cd IN ('EX', 'EE', 'ES') "
+		+ "and not exists (select 1 from ca_icr_excl_type_t where acct_icr_typ_cd = t3.acct_icr_typ_cd "
+		+ "and acct_icr_excl_typ_actv_ind = 'Y' and fin_object_cd = t1.fin_object_cd) and t1.univ_fiscal_yr >= " + fiscalYear
+		+ " group by t1.univ_fiscal_yr, t1.fin_coa_cd, t1.account_nbr, t1.sub_acct_nbr, t1.fin_object_cd, t1.fin_balance_typ_cd, "
+		+ "t1.fdoc_typ_cd, t1.fs_origin_cd, t1.fdoc_nbr, t1.trn_encum_desc";
+	LOG.info(sql);
+	getJdbcTemplate().query(sql, new ResultSetExtractor() {
+	    @Override
+	    public Object extractData(ResultSet rs) throws SQLException, DataAccessException {
+		try {
+		    String newLine = System.getProperty("line.separator");
+		    while (rs.next()) {
+			KualiDecimal encumb_amt = new KualiDecimal(rs.getDouble("encumb_amt"));
+			KualiDecimal current_amt = new KualiDecimal(rs.getDouble("current_amt"));
+			KualiDecimal new_encumb_amt = encumb_amt.subtract(current_amt);
+			String debitCreditInd = "D";
+			if(new_encumb_amt.isNegative()){
+			    debitCreditInd = "C";
+			}
+			fw.write(""
+				+ rs.getString("univ_fiscal_yr")// Fiscal year 1-4
+				+ rs.getString("fin_coa_cd") // Chart code 5-6
+				+ rs.getString("account_nbr") // Account Number 7-13
+				+ StringUtils.rightPad(rs.getString("sub_acct_nbr"), 5)//Sub Account 14-18
+				+ rs.getString("fin_object_cd") //Object Code     19-22
+				+ "---" //Sub Object      23-25
+				+ rs.getString("fin_balance_typ_cd") // Balance Type    26-27
+				+ StringUtils.rightPad("", 2) //Object Type     28-29
+				+ StringUtils.rightPad("", 2) //Fiscal Period   30-31
+				+ StringUtils.rightPad(rs.getString("fdoc_typ_cd"), 4) //Document Type   32-35
+				+ "IC" //Origin Code     36-37
+				+ StringUtils.rightPad(rs.getString("fdoc_nbr"), 14) //Doc Number  38-51
+				+ StringUtils.rightPad("", 5) //Entry Seq Nbr   52-56
+				+ StringUtils.rightPad(rs.getString("trn_encum_desc"), 40) //Description     57-96
+				+ StringUtils.leftPad(new_encumb_amt.abs().toString(), 20) //Amount 97-116
+				+ debitCreditInd //Debit/Credit    117-117
+				+ new SimpleDateFormat("yyyy-MM-dd").format(new Date()) //Trans Date      118-127
+		                + "          "                        // Org Doc Nbr       128-137
+		                + "          "                        // Project Code      138-147
+		                + "        "                          // orig ref id       148-155
+		                + "    "                              // ref doc type      156-159
+		                + "  "                                // ref origin code   160-161
+		                + "              "                    // ref doc number    162-175
+		                + "          "                        // reversal date     176-185
+		                + "D"                       // Enc update code   186-186
+			); 
+			
+			fw.write(newLine);
+			fw.flush();
+		    }
+		} catch (Exception e) {
+		    throw new RuntimeException("e", e);
+		}
+		return null;
+	    }
+	});
+    }
+}
Index: work/src/edu/arizona/kfs/gl/dataaccess/IcrEncumbranceDao.java
===================================================================
--- work/src/edu/arizona/kfs/gl/dataaccess/IcrEncumbranceDao.java	(revision 0)
+++ work/src/edu/arizona/kfs/gl/dataaccess/IcrEncumbranceDao.java	(revision 25003)
@@ -0,0 +1,25 @@
+/*
+ * Copyright 2012 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.gl.dataaccess;
+
+import java.io.IOException;
+import java.io.Writer;
+
+public interface IcrEncumbranceDao {
+
+    public void buildIcrEncumbranceFeed(Integer fiscalYear, Writer fw) throws IOException;
+
+}
\ No newline at end of file
